<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.6.RELEASE</version>
	</parent>

	<groupId>tech.libra</groupId>
	<artifactId>libra-jenkins-test-master</artifactId>
	<version>1.1-SNAPSHOT</version>

	<packaging>pom</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<org.eclipse.persistence.eclipselink-version>2.5.1</org.eclipse.persistence.eclipselink-version>
		<com.google.guava-version>16.0.1</com.google.guava-version>
		<org.apache.commons.lang3-version>3.3.2</org.apache.commons.lang3-version>
		<com.google.code.findbugs-version>3.0.0</com.google.code.findbugs-version>
		<apache.poi-version>3.10-FINAL</apache.poi-version>
		<apache.commons.io-version>2.4</apache.commons.io-version>
		<apache.commons.fileupload-version>1.2.1</apache.commons.fileupload-version>
		<org.apache.commons.compress-version>1.9</org.apache.commons.compress-version>
		<io.springfox-version>2.6.1</io.springfox-version>

	</properties>

	<scm>
		<connection>scm:git:git@github.com:Zakharg/libra-jenkins-test-master.git</connection>
		<url>scm:git:git@github.com:Zakharg/libra-jenkins-test-master.git</url>
		<developerConnection>scm:git:git@github.com:Zakharg/libra-jenkins-test-master.git</developerConnection>
		<tag>HEAD</tag>
	</scm>

	<profiles>
		<profile>
			<id>release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<build>
		<plugins>
			<!-- <plugin> -->
			<!-- <groupId>org.apache.maven.plugins</groupId> -->
			<!-- <artifactId>maven-compiler-plugin</artifactId> -->
			<!-- <version>3.1</version> -->
			<!-- <configuration> -->
			<!-- <source>${java-version}</source> -->
			<!-- <target>${java-version}</target> -->
			<!-- <compilerArgument>-Xlint:all</compilerArgument> -->
			<!-- <showWarnings>true</showWarnings> -->
			<!-- <showDeprecation>true</showDeprecation> -->
			<!-- <encoding>UTF-8</encoding> -->
			<!-- </configuration> -->
			<!-- </plugin> -->
			<!-- modify content of a maven property and save it into a new property 
				via Groovy Maven Plugin ... -->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.3</version>
				<configuration>
					<autoVersionSubmodules>true</autoVersionSubmodules>
					<pushChanges>false</pushChanges>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.groovy.maven</groupId>
				<artifactId>gmaven-plugin</artifactId>
				<version>1.0</version>
				<executions>
					<execution>
						<phase>initialize</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<source>
								project.properties.setProperty('project.version.nosnapshot',
								"${project.version}".replace('-SNAPSHOT', ''))
							</source>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-eclipse-plugin</artifactId>
				<configuration>
					<additionalProjectnatures>
						<projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
					</additionalProjectnatures>
					<additionalBuildcommands>
						<buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
					</additionalBuildcommands>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>com.spotify</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>1.0.0</version>
					<configuration>
						<baseImage>openjdk:8-jdk-alpine</baseImage>
						<entryPoint>["java", "-jar", "${project.build.finalName}.jar"]</entryPoint>
						<imageName>${docker.baseUri}/libra/${project.artifactId}</imageName>
						<resources>
							<resource>
								<directory>${project.build.directory}</directory>
								<include>${project.build.finalName}.jar</include>
							</resource>
						</resources>
						<serverId>repository.devops.libra.tech:8445</serverId>
						<useGitCommitId>true</useGitCommitId>
					</configuration>
				</plugin>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.groovy.maven
										</groupId>
										<artifactId>
											gmaven-plugin
										</artifactId>
										<versionRange>
											[1.0,)
										</versionRange>
										<goals>
											<goal>execute</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<dependencyManagement>
		<dependencies>
			<!-- Here we going to put dependencies which are not covered by SpringBoot -->

			<dependency>
				<groupId>org.eclipse.persistence</groupId>
				<artifactId>eclipselink</artifactId>
				<version>${org.eclipse.persistence.eclipselink-version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.eclipse.persistence</groupId>
						<artifactId>commonj.sdo</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger2</artifactId>
				<version>${io.springfox-version}</version>
			</dependency>

			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger-ui</artifactId>
				<version>${io.springfox-version}</version>
			</dependency>

			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${com.google.guava-version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${org.apache.commons.lang3-version}</version>
			</dependency>

			<dependency>
				<groupId>com.google.code.findbugs</groupId>
				<artifactId>jsr305</artifactId>
				<version>${com.google.code.findbugs-version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi</artifactId>
				<version>${apache.poi-version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-ooxml</artifactId>
				<version>${apache.poi-version}</version>
			</dependency>

			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${apache.commons.io-version}</version>
			</dependency>

			<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>${apache.commons.fileupload-version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-compress</artifactId>
				<version>${org.apache.commons.compress-version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<distributionManagement>
		<snapshotRepository>
			<id>maven-snapshots</id>
			<url>http://10.6.33.20:8081/repository/maven-snapshots</url>
		</snapshotRepository>
		<repository>
			<id>maven-releases</id>
			<url>http://10.6.33.20:8081/repository/maven-releases/</url>		
		</repository>
	</distributionManagement>


</project>